
** Cucumber pode ser inicializado a partir do junit4 (@RunWith)
** os arquivos .feature são analisados pelo Gherkin e Cucumber
** Gerkin é uma linguagem para definir os .feature
** Cucumber gera e roda os passos (steps) associados ao .feature
** dentro do .feature escrevemos a funcionalidade e os critérios de aceitação
** um critério de aceitação segue a estrutura de um teste (passos ou steps)
** os passos são Given-When-Then ou Dado-Quando-Entao
** cada passo será implementado por um método anotado (step)


Cuidado com os Hooks!
Vimos no vídeo as anotações @After e @Before usado em métodos nas classes que implementam os passos de um cenário.

Esse métodos também são chamados de Hooks (ganchos) que nada mais são métodos chamados automaticamente quando algum evento acontece. No caso, o evento é a execução de um cenário.

Também existem os hooks @BeforeStep e @AfterStep. Como o nome já indica, nessas anotações o evento é a execução de um step. Ou seja, cada vez que um métodos anotado com @Dado @Quando ou @Entao é chamado, será chamado o hook (antes ou depois, dependendo da anotação).

Em geral, vale a pena alertar que devemos ter cuidado com o uso de hooks pois esses métodos não ficam visíveis para quem lê apenas o arquivo .feature.